name: Weekly Performance

on:
  pull_request:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      name:
        description: "Manual trigger"
  schedule:
    - cron: '12 13 * * 0'

permissions:
  contents: write

jobs:
  performance:
    name: Performance
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Install CMake and prerequisites
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl python3-pip valgrind
          python3 -m pip install --upgrade pip
          python3 -m pip install msparser

          # CMake 3.31.8
          CMAKE_VER=3.31.8
          curl -L "https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER}/cmake-${CMAKE_VER}-linux-x86_64.tar.gz" -o cmake-${CMAKE_VER}.tgz
          sudo tar -C /opt -xzf cmake-${CMAKE_VER}.tgz
          echo "/opt/cmake-${CMAKE_VER}-linux-x86_64/bin" >> "$GITHUB_PATH"

      - name: Run tests
        shell: bash
        run: |
          ./test/memory/memory_test.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: |
            build/complete_profile.csv
            build/core_profile.csv
            build/stack.csv
            build/profiles_bss.csv
            build/profiles_data.csv
            build/profiles_text.csv
          if-no-files-found: error

  analyze-metrics:
    name: Analyze Metrics
    runs-on: ubuntu-24.04
    needs: performance

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: memory/performance

      - name: Install Python and prerequisites
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install matplotlib

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: results

      - name: Save results into memory
        shell: bash
        run: |
          set -euxo pipefail

          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"

          BR="memory/performance" # Use this branch to store performance results

          python3 ci/metrics/save_results.py \
            --input results/complete_profile.csv \
            --output ci/metrics/memory/complete_profile_timeseries.csv
          python3 ci/metrics/save_results.py \
            --input results/core_profile.csv \
            --output ci/metrics/memory/core_profile_timeseries.csv
          python3 ci/metrics/save_results.py \
            --input results/stack.csv \
            --output ci/metrics/memory/stack_timeseries.csv
          python3 ci/metrics/save_results.py \
            --input results/profiles_bss.csv \
            --output ci/metrics/memory/profiles_bss_timeseries.csv
          python3 ci/metrics/save_results.py \
            --input results/profiles_data.csv \
            --output ci/metrics/memory/profiles_data_timeseries.csv
          python3 ci/metrics/save_results.py \
            --input results/profiles_text.csv \
            --output ci/metrics/memory/profiles_text_timeseries.csv

          git add ci/metrics/memory/*_timeseries.csv
          git diff --cached --quiet || git commit -m "metrics: append run ${GITHUB_RUN_NUMBER} (${GITHUB_SHA::8})"
          git push origin "${BR}"

      - name: Generate plots
        shell: bash
        run: |
          set -euxo pipefail

          LAST_N=52
          
          python3 ci/metrics/generate_plot.py \
            --input ci/metrics/memory/complete_profile_timeseries.csv \
            --output plots/complete_profile_plot.png \
            --title "Complete Profile" \
            --ylabel "Bytes" \
            --last LAST_N
          python3 ci/metrics/generate_plot.py \
            --input ci/metrics/memory/core_profile_timeseries.csv \
            --output plots/core_profile_plot.png \
            --title "Core Profile" \
            --ylabel "Bytes" \
            --last LAST_N
          python3 ci/metrics/generate_plot.py \
            --input ci/metrics/memory/stack_timeseries.csv \
            --output plots/stack_plot.png \
            --title "Simple App Stack Usage" \
            --ylabel "Bytes" \
            --last LAST_N
          python3 ci/metrics/generate_plot.py \
            --input ci/metrics/memory/profiles_bss_timeseries.csv \
            --output plots/profiles_bss_plot.png \
            --title "Increase of .bss memory by enabling profiles" \
            --ylabel "Bytes" \
            --last LAST_N
          python3 ci/metrics/generate_plot.py \
            --input ci/metrics/memory/profiles_data_timeseries.csv \
            --output plots/profiles_data_plot.png \
            --title "Increase of .data memory by enabling profiles" \
            --ylabel "Bytes" \
            --last LAST_N
          python3 ci/metrics/generate_plot.py \
            --input ci/metrics/memory/profiles_text_timeseries.csv \
            --output plots/profiles_text_plot.png \
            --title "Increase of .text memory by enabling profiles" \
            --ylabel "Bytes" \
            --last LAST_N

      - name: Upload plots
        uses: actions/upload-artifact@v4
        with:
          name: performance-plots
          path: plots/*.png
          if-no-files-found: warn
